function rmsNoise = RawDataNoiseEvaluationM(dataPath, saveFolder )
% RAWDATANOISEEVALUATION Evaluates the amount of noise over all electrodes
% for a input data recording
% Generates and save the output .noise file in ascii single precision
% number - as column array.
%
% Watch for heading tab in each line generated by matlab sav.
%
% Arguments:
% dataPath - absolute or relative path to data folder/file
% saveFolder - absolute or relative path to output save folder
%
%--------------------------------------------

%% Validating attributes
if ~(exist(dataPath,'file') == 2 || exist(dataPath,'file') == 7)
    throw(MException('', 'RawDataNoiseEvaluation: data source does not exist'));
end
if ~(exist(saveFolder,'file') == 7)
    throw(MException('', 'RawDataNoiseEvaluation: dataset folder does not exist'));
end

%% Using java up to getData
import edu.ucsc.neurobiology.vision.io.*
import java.io.*

config = mVisionConfig();
noiseConfig = config.getNoiseConfig();

time = noiseConfig.time; % Compute noise from 5 secs of data
timeToSkip = noiseConfig.timeToSkip; % Skip the first 5 sec of the file

% Setup the data source
dataSource = DataFileUpsampler(dataPath);

samplingRate = dataSource.samplingRate;

nSamples = time * samplingRate;

% getData
dataSource.loadRandomBuffer(timeToSkip * samplingRate + dataSource.startSample, nSamples, false);

%% Starting noise calculation
[rmsNoise,~] = getNoise(dataSource.rawData(2:end,:)); % Remove TTL
rmsNoise = [0;rmsNoise];

%% Writing output .noise file - as .ascii and as .mat
[~,name,~] = fileparts(dataPath); % Catching folder name as last element of saveFolder path
save([saveFolder,filesep,name,'.noise'],'rmsNoise','-ascii','-double'); % Saving, ascii single precision format
save([saveFolder,filesep,name,'.noise.mat'],'rmsNoise'); % Saving a copy in mat format for further use.

end