function [] = RawDataNoiseEvaluationM( dataPath, saveFolder )
% RAWDATANOISEEVALUATION Evaluates the amount of noise over all electrodes
% for a input data recording
% Generates and save the output .noise file in ascii single precision
% number - as column array.
%
% Watch for heading tab in each line generated by matlab sav.
%
% Arguments:
% dataPath - absolute or relative path to data folder/file
% saveFolder - absolute or relative path to output save folder
%
% Note:is called RawDataNoiseEvaluationM.mat for now to avoid conflicts
% with java class calls.
%
% TODO - optionalize the list of electrodes to analyze with both include
% and exclude options.
%
%
%
%--------------------------------------------

%% Using java up to getData
import edu.ucsc.neurobiology.vision.io.*
import java.io.*

% Hardcoded configuration from the java version
time = 5;
timeToSkip = 5;
samplingRate = 20000;

% data read code conveniently adapted for java/matlab data compatibility
% File setup adopted from java version
% for command call compatibility
% TODO move that to a matlab file IO
parser = DataFileStringParser(dataPath);
datasets = parser.getDatasets();
rawDataFile = RawDataFile(File(char(datasets(1))));
startTimes = parser.getStartTimes();
startTime = startTimes(1);

header = rawDataFile.getHeader();
nElectrodes = header.getNumberOfElectrodes();
nSamples = time * samplingRate;

% getData
rawData = rawDataFile.getData( (timeToSkip+startTime) * samplingRate, nSamples);
% rawData is finally set up !

%% Starting noise calculation
[rmsNoise,~] = getNoise(rawData(:,2:end));
rmsNoise = [0;rmsNoise'];

%% Writing output .noise file
[~,name,~] = fileparts(saveFolder); % Catching folder name as last element of saveFolder path
save([saveFolder,filesep,name,'.noise'],'rmsNoise','-ascii'); % Saving, ascii single precision format

end
